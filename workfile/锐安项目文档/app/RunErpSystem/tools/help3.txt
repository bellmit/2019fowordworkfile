
Java中如何得到文件的创建时间＆最后修改时间
博客分类： 心得体会
 
JavaWindowsCC++C#.




Java代码  
1.import java.io.File;  
2.import java.text.DateFormat;  
3.import java.text.SimpleDateFormat;  
4.import java.util.Date;  
5./** 
6. * 如果是文件没有经过修改则得到的是创建时间 如果修改过则得到是最后修改的时间 
7. *  
8. * @author iSoftStone 
9. */  
10.public class TestGetFileTime {  
11.  
12.    public static void main(String[] args) {  
13.  
14.        DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
15.        File file = new File("d:/test.txt");  
16.        // 毫秒数  
17.        long modifiedTime = file.lastModified();  
18.        System.out.println(modifiedTime);  
19.        // 通过毫秒数构造日期 即可将毫秒数转换为日期  
20.        Date d = new Date(modifiedTime);  
21.        System.out.println(format.format(d));  
22.  
23.        // Set the last modified time  
24.        long newModifiedTime = System.currentTimeMillis();  
25.        // 设置最后一次修改的时间  
26.        boolean success = file.setLastModified(newModifiedTime);  
27.        if (!success) {  
28.            System.out.println("change failed");  
29.        } else {  
30.  
31.            System.out.println(format.format(new Date(file.lastModified())));  
32.        }  
33.  
34.    }  
35.  
36.}  
 
 以下给出一个windows下取到具体时间的程序：
 


Java代码  
1./** 
2. * 以下给出一个windows下取到具体时间的程序： 
3. *  
4. * @author iSoftStone 
5. */  
6.public class FirstTest {  
7.  
8.    /** Creates a new instance of FirstTest */  
9.    public FirstTest() {  
10.    }  
11.  
12.    public static void main(String[] args) {  
13.        try {  
14.            Process p = Runtime.getRuntime().exec(  
15.                    "cmd /C dir d:\\test.txt /tc");  
16.            InputStream is = p.getInputStream();  
17.            BufferedReader br = new BufferedReader(new InputStreamReader(is));  
18.            String str;  
19.            int i = 0;  
20.            while ((str = br.readLine()) != null) {  
21.                i++;  
22.                if (i == 6) {  
23.                    System.out.println(str.substring(0, 17));  
24.                }  
25.            }  
26.  
27.        } catch (java.io.IOException exc) {  
28.            exc.printStackTrace();  
29.        }  
30.    }  
31.}  
